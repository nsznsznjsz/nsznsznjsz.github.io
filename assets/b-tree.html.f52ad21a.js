import{o as s,c as a,F as l,a as n,b as t}from"./app.cad05c30.js";const e={},m=n("p",null,[t("B 树是一种自平衡树，能够保持数据的有序，且拥有良好的查找性能和更少的读盘次数，常用于文件系统和数据库的设计实现中。B 树由二叉树发展而来，平衡二叉树在查找性能达到了对数时间 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"l"),n("mi",null,"o"),n("msub",null,[n("mi",null,"g"),n("mn",null,"2")]),n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"log_{2}n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord"},[n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[n("span",{style:{top:"-2.5500000000000003em","margin-left":"-0.03588em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"2")])])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])]),n("span",{class:"mord mathnormal"},"n")])])])]),t("，在内部查找时十分高效，但是在外部查找中由于 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msub",null,[n("mi",null,"t"),n("mrow",null,[n("mi",null,"I"),n("mi",null,"O")])]),n("mo",null,">"),n("mo",null,">"),n("msub",null,[n("mi",null,"t"),n("mrow",null,[n("mi",null,"s"),n("mi",null,"e"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"c"),n("mi",null,"h")])])]),n("annotation",{encoding:"application/x-tex"},"t_{IO}>>t_{search}")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.76508em","vertical-align":"-0.15em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"t"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.32833099999999993em"}},[n("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07847em"}},"I"),n("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"O")])])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2777777777777778em"}}),n("span",{class:"mrel"},">>"),n("span",{class:"mspace",style:{"margin-right":"0.2777777777777778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.76508em","vertical-align":"-0.15em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"t"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.33610799999999996em"}},[n("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight"},"se"),n("span",{class:"mord mathnormal mtight"},"a"),n("span",{class:"mord mathnormal mtight"},"rc"),n("span",{class:"mord mathnormal mtight"},"h")])])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])])])])])]),t("，人们希望设计一种能够尽可能减少读盘次数的数据结构。顺着二叉树的思路，人们在二叉树的基础上该进得到了 B 树（m 叉查找树），将树高降到了 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"l"),n("mi",null,"o"),n("msub",null,[n("mi",null,"g"),n("mi",null,"m")]),n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"log_{m}n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord"},[n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.151392em"}},[n("span",{style:{top:"-2.5500000000000003em","margin-left":"-0.03588em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight"},"m")])])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])]),n("span",{class:"mord mathnormal"},"n")])])])]),t("。")],-1),i=n("h2",{id:"定义",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#定义","aria-hidden":"true"},"#"),t(" 定义")],-1),r=n("p",null,[t("一个 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"m")]),n("annotation",{encoding:"application/x-tex"},"m")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.43056em","vertical-align":"0em"}}),n("span",{class:"mord mathnormal"},"m")])])])]),t(" 阶的 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"B")]),n("annotation",{encoding:"application/x-tex"},"B")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.68333em","vertical-align":"0em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B")])])])]),t(" 树是有以下属性的树：")],-1),p=n("ol",null,[n("li",null,[t("每一个节点最多有 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"m")]),n("annotation",{encoding:"application/x-tex"},"m")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.43056em","vertical-align":"0em"}}),n("span",{class:"mord mathnormal"},"m")])])])]),t(" 个子节点；")]),n("li",null,[t("每一个节点（除根节点）最少有 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",{stretchy:"false"},"⌊"),n("mi",null,"m"),n("mi",{mathvariant:"normal"},"/"),n("mn",null,"2"),n("mo",{stretchy:"false"},"⌋")]),n("annotation",{encoding:"application/x-tex"},"\\lfloor m/2 \\rfloor")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mopen"},"⌊"),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mord"},"/2"),n("span",{class:"mclose"},"⌋")])])])]),t(" 个子节点；")]),n("li",null,"如果根节点不是叶子节点，那么它至少有两个子节点"),n("li",null,[t("有 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"k")]),n("annotation",{encoding:"application/x-tex"},"k")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.69444em","vertical-align":"0em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])])]),t(" 个子节点的非叶子节点拥有 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"k"),n("mo",null,"−"),n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"k-1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.77777em","vertical-align":"-0.08333em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),n("span",{class:"mspace",style:{"margin-right":"0.2222222222222222em"}}),n("span",{class:"mbin"},"−"),n("span",{class:"mspace",style:{"margin-right":"0.2222222222222222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.64444em","vertical-align":"0em"}}),n("span",{class:"mord"},"1")])])])]),t(" 个键")]),n("li",null,"所有的叶子节点都在同一层")],-1),c=n("p",null,[t("其中性质 2 和性质 4 的约束使 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"B")]),n("annotation",{encoding:"application/x-tex"},"B")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.68333em","vertical-align":"0em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B")])])])]),t(" 树至少为一颗半满的树来保证存储密度；"),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"B")]),n("annotation",{encoding:"application/x-tex"},"B")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.68333em","vertical-align":"0em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B")])])])]),t(" 树的叶子节点通常指的是额外填充的空节点，当查找操作到达空节点时，即代表查找失败，这一层叶节点可以计入 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"B")]),n("annotation",{encoding:"application/x-tex"},"B")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.68333em","vertical-align":"0em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B")])])])]),t(" 树的高度，也可以不计入。")],-1),h=n("h2",{id:"查找",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#查找","aria-hidden":"true"},"#"),t(" 查找")],-1),o=n("p",null,[n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"B")]),n("annotation",{encoding:"application/x-tex"},"B")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.68333em","vertical-align":"0em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B")])])])]),t(" 树的查找过程与二叉树查找过程十分相似，只是划分区域略有差别，如下图（以 3 阶 B 树为例）：")],-1),u=n("p",null,[n("img",{src:"/assets/b-tree-search.c72ad6c2.png",alt:"B树查找过程"})],-1),g=n("p",null,"通过递归的查找遍历每一层的 B 树，必定处于下列三种情况之一：",-1),d=n("ol",null,[n("li",null,"位于当前节点的数据中，查找成功；"),n("li",null,"位于当前节点的子节点区间中，向下递归；"),n("li",null,"当前节点为叶子节点（空节点），查找失败。")],-1),x=n("h2",{id:"插入",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#插入","aria-hidden":"true"},"#"),t(" 插入")],-1),w=n("p",null,"B 树的插入过程与平衡二叉树十分相似，同样分为查找和调整两步。查找过程如上述，找到非叶子的最底层节点将其插入，以下列三阶 B 树为例（叶子节点省略）：",-1),y=n("p",null,[n("img",{src:"/assets/b-tree-insert-1.30372f22.png",alt:"示例三阶B树"})],-1),b=n("blockquote",null,[n("p",null,[t("三阶 B 树指的是子节点数量最多为 3，键值数量最多为 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"3"),n("mo",null,"−"),n("mn",null,"2"),n("mo",null,"="),n("mn",null,"2")]),n("annotation",{encoding:"application/x-tex"},"3-2=2")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.72777em","vertical-align":"-0.08333em"}}),n("span",{class:"mord"},"3"),n("span",{class:"mspace",style:{"margin-right":"0.2222222222222222em"}}),n("span",{class:"mbin"},"−"),n("span",{class:"mspace",style:{"margin-right":"0.2222222222222222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.64444em","vertical-align":"0em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mspace",style:{"margin-right":"0.2777777777777778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2777777777777778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.64444em","vertical-align":"0em"}}),n("span",{class:"mord"},"2")])])])]),t("，因此键值数量最少为 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",{stretchy:"false"},"⌊"),n("mn",null,"3"),n("mi",{mathvariant:"normal"},"/"),n("mn",null,"2"),n("mo",{stretchy:"false"},"⌋"),n("mo",null,"="),n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"\\lfloor 3/2 \\rfloor =1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mopen"},"⌊"),n("span",{class:"mord"},"3/2"),n("span",{class:"mclose"},"⌋"),n("span",{class:"mspace",style:{"margin-right":"0.2777777777777778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2777777777777778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.64444em","vertical-align":"0em"}}),n("span",{class:"mord"},"1")])])])]),t("，子节点数量最少为 "),n("span",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"1"),n("mo",null,"+"),n("mn",null,"1"),n("mo",null,"="),n("mn",null,"2")]),n("annotation",{encoding:"application/x-tex"},"1+1=2")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.72777em","vertical-align":"-0.08333em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mspace",style:{"margin-right":"0.2222222222222222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222222222222222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.64444em","vertical-align":"0em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mspace",style:{"margin-right":"0.2777777777777778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2777777777777778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.64444em","vertical-align":"0em"}}),n("span",{class:"mord"},"2")])])])])])],-1),k=n("p",null,"插入 90，先查找插入位置，直到找到最底层节点 70（非叶子节点），将 90 插入到 70 右侧，当前节点可以容纳该数据，无需调整：",-1),v=n("p",null,[n("img",{src:"/assets/b-tree-insert-2.62de3b09.png",alt:"插入90过程"})],-1),M=n("p",null,"插入 80，过程如下：",-1),B=n("ol",null,[n("li",null,"查找插入位置为 70 与 90 之间，将其插入，此时该节点子节点数量为 4，需要调整；"),n("li",null,"将当前节点以 80 为枢轴分裂为三部分：80 左侧（只有 70）、80、80 右侧（只有 90）。将 9-提入根节点，70 和 90 分别为其两个子节点，将当前节点设为其父节点，此时满足 3 阶 B 树定义，调整结束。")],-1),f=n("p",null,[n("img",{src:"/assets/b-tree-insert-3.1829f35b.png",alt:"插入"})],-1),L=n("p",null,"插入 100，查找后直接插入，无需调整，得到：",-1),z=n("p",null,[n("img",{src:"/assets/b-tree-insert-4.2a88d0bf.png",alt:"插入100过程"})],-1),_=n("p",null,"插入 85，过程如下：",-1),I=n("ol",null,[n("li",null,"应插入 90 所在节点左侧，但是该节点满，需要调整；"),n("li",null,"将当前节点分裂为三部分，90 提到其父节点（根节点），85 和 100 分别为其子节点，当前节点移动到其父节点（根节点），当前节点满，需要调整；"),n("li",null,"将 80 提出，成为新的根节点，50 和 90 成为其子节点，树高加一。当前节点移动到其父节点（新根节点 80），此时满足三阶 B 树定义，调整结束。")],-1),O=n("p",null,[n("img",{src:"/assets/b-tree-insert-5.9b7e1688.png",alt:"插入85过程"})],-1),q=n("h2",{id:"删除",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#删除","aria-hidden":"true"},"#"),t(" 删除")],-1),j=n("p",null,"B 树的删除同样分为查找和调整两个步骤，查找过程如上述，找到当前节点并删除键值后，可能会违背定义 2 的限制，此时需要向兄弟节点（一定存在）借键值，此时会出现四种情况：",-1),F=n("ol",null,[n("li",null,"删去该键值后成为空树；"),n("li",null,"删去该键值后依然满足定义；"),n("li",null,"删去该键值后不再满足定义，兄弟节点可以借；"),n("li",null,"删去该键值后不再满足定义且兄弟节点不够借。")],-1),A=n("p",null,"前两种情况时，直接删去即可；",-1),C=n("p",null,"第三种情况时，需要向兄弟节点借一个键值，即可满足定义；",-1),D=n("blockquote",null,[n("p",null,"说是向兄弟节点借，但实际上是轮转，即父节点键值到当前节点，兄弟节点键值到父节点，详见示例")],-1),E=n("p",null,"第四种情况时，需要合并兄弟节点，当前节点移动至父节点，父节点少一个节点，可视为删除父节点一个键值，递归直到成为前三种情况。",-1),G=n("h3",{id:"删除-向兄弟节点借入",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#删除-向兄弟节点借入","aria-hidden":"true"},"#"),t(" 删除：向兄弟节点借入")],-1),H=n("p",null,"删除键值 230（五阶 B 树）：",-1),J=n("p",null,[n("img",{src:"/assets/b-tree-delete-1.d0a4cf3f.png",alt:"删除示例一"})],-1),K=n("h3",{id:"删除-兄弟节点不够借",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#删除-兄弟节点不够借","aria-hidden":"true"},"#"),t(" 删除：兄弟节点不够借")],-1),N=n("p",null,[n("img",{src:"/assets/b-tree-delete-2.a15d5fbb.png",alt:"B树删除示例二"})],-1);e.render=function(n,t){return s(),a(l,null,[m,i,r,p,c,h,o,u,g,d,x,w,y,b,k,v,M,B,f,L,z,_,I,O,q,j,F,A,C,D,E,G,H,J,K,N],64)};export default e;
