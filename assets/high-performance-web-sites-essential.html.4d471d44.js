import{r as a,o as e,c as i,a as r,F as h,d as l,b as d}from"./app.cad05c30.js";const n={},t=l('<h1 id="高性能网站建设指南" tabindex="-1"><a class="header-anchor" href="#高性能网站建设指南" aria-hidden="true">#</a> 高性能网站建设指南</h1><h2 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> JavaScript</h2><h3 id="精简" tabindex="-1"><a class="header-anchor" href="#精简" aria-hidden="true">#</a> 精简</h3><ul><li>精简 (删除空格, 删除换行等)</li><li>混淆 (改变变量名) <ul><li>技术不成熟</li><li>Class 属性不可混淆</li><li>函数内局部变量可混淆</li></ul></li><li>Tree-Sharking <ul><li>Webpack 2 支持</li><li>rollup 原生支持</li></ul></li></ul><h3 id="阻塞" tabindex="-1"><a class="header-anchor" href="#阻塞" aria-hidden="true">#</a> 阻塞</h3><ul><li><strong>放在底部</strong> 可改变 DOM 树结构</li><li><strong>defer</strong> H4, load 后加载</li><li><strong>async</strong> H5, 下载完加载 &lt;link /&gt; 后紧跟 &lt;script /&gt; 可能阻塞脚本下载</li><li>多个 script 标签可并行下载, 浏览器会模拟线性加载</li></ul><h3 id="去重" tabindex="-1"><a class="header-anchor" href="#去重" aria-hidden="true">#</a> 去重</h3><ul><li>定义全局变量</li></ul><h3 id="使-ajax-可缓存" tabindex="-1"><a class="header-anchor" href="#使-ajax-可缓存" aria-hidden="true">#</a> 使 Ajax 可缓存</h3><h3 id="外联" tabindex="-1"><a class="header-anchor" href="#外联" aria-hidden="true">#</a> 外联</h3><ul><li>可缓存</li><li>加载必须脚本, 动态加载剩余脚本</li></ul><h2 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> CSS</h2><h3 id="放在头部" tabindex="-1"><a class="header-anchor" href="#放在头部" aria-hidden="true">#</a> 放在头部</h3><ul><li>白屏</li><li>FOUC（无样式内容的闪烁）</li><li>流式渲染</li></ul><h3 id="避免表达式" tabindex="-1"><a class="header-anchor" href="#避免表达式" aria-hidden="true">#</a> 避免表达式</h3><p>CSS还有表达式？？？</p><h3 id="精简-1" tabindex="-1"><a class="header-anchor" href="#精简-1" aria-hidden="true">#</a> 精简</h3>',17),s=r("li",null,"0px -> 0",-1),c=r("li",null,"#660066 -> #606",-1),p=d("合并相同类，去除无用类 "),u={href:"https://github.com/NMFR/optimize-css-assets-webpack-plugin",target:"_blank",rel:"noopener noreferrer"},o=d("optimize-css-assets-webpack-plugin"),f=l('<h3 id="外联-1" tabindex="-1"><a class="header-anchor" href="#外联-1" aria-hidden="true">#</a> 外联</h3><p>内联更快, 但外联可重用/缓存,且可以预下载</p><h2 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> HTTP</h2><h3 id="expires-头" tabindex="-1"><a class="header-anchor" href="#expires-头" aria-hidden="true">#</a> Expires 头</h3><p>设长期，通过全量更新弃用</p><h3 id="配置-etag" tabindex="-1"><a class="header-anchor" href="#配置-etag" aria-hidden="true">#</a> 配置 ETag</h3><p>或者删除</p><h3 id="gzip" tabindex="-1"><a class="header-anchor" href="#gzip" aria-hidden="true">#</a> gzip</h3><blockquote><p>IE 5.5 不支持？？？</p></blockquote><h3 id="减少请求" tabindex="-1"><a class="header-anchor" href="#减少请求" aria-hidden="true">#</a> 减少请求</h3><ul><li>CSS Sprites</li><li>合并脚本和样式表</li></ul><h3 id="并行请求" tabindex="-1"><a class="header-anchor" href="#并行请求" aria-hidden="true">#</a> 并行请求</h3><ul><li><p>JS阻塞</p></li><li><p>HTTP1.1 为每个主机名 2个并行</p><p>主动降级为HTTP1.0能获取4个并行数, 但失去了持久连接Keep-Alive并不一定划算</p></li><li><p>使用DNS的CNAME将组件配置到多个主机名上</p><p>推荐为 2个</p></li></ul><h2 id="other" tabindex="-1"><a class="header-anchor" href="#other" aria-hidden="true">#</a> Other</h2><h3 id="cdn" tabindex="-1"><a class="header-anchor" href="#cdn" aria-hidden="true">#</a> CDN</h3><p>个人网站用也许更慢</p><h3 id="减少dns查询" tabindex="-1"><a class="header-anchor" href="#减少dns查询" aria-hidden="true">#</a> 减少DNS查询</h3><ul><li>配置TTL</li><li>配置Keep-Alive</li></ul><h3 id="避免重定向" tabindex="-1"><a class="header-anchor" href="#避免重定向" aria-hidden="true">#</a> 避免重定向</h3><p>避免无意识的重定向</p><p>比如 URL 从 http://iyzx.xin =&gt; http://iyzx.xin/</p><p><code>a href</code></p><p>设置为 # 会导致跳至顶端</p><p>e.preventDefault()</p><p>javascript:; &lt;=&gt; javascript:void(0);</p><h2 id="追踪流量" tabindex="-1"><a class="header-anchor" href="#追踪流量" aria-hidden="true">#</a> 追踪流量</h2><ul><li>内部流量</li></ul><p>referer</p><ul><li><p>出战流量</p><ul><li>重定向包装</li><li>信标: 监听点击事件</li></ul></li></ul><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2><ul><li>Steve Souders. High Performance Web Sites: Essential Knowledge for Front-End Engineers. 电子工业出版社</li></ul>',31);n.render=function(l,d){const n=a("OutboundLink");return e(),i(h,null,[t,r("ul",null,[s,c,r("li",null,[p,r("a",u,[o,r(n)])])]),f],64)};export default n;
